@model Acunmedya_Travel_Project.Entities.Destination
@{
    ViewBag.Title = "Tur Güncelle";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<div class="container-fluid p-4">
    <h2 class="text-light mb-4 pb-2" style="border-bottom: 2px solid rgba(0, 123, 255, 0.3); font-weight: 300; letter-spacing: 1px;">
        <i class="bi bi-pencil-square me-2 text-primary"></i>
        Tur Güncelleme
    </h2>

    <div class="card mb-4" style="background-color: #0a0e17; border-color: #1a1f2c;">
        <div class="card-header text-light" style="background-color: #0d1321; border-color: #1a1f2c;">
            <h5 class="m-0"><i class="bi bi-geo-alt me-2 text-info"></i>Tur Bilgilerini Düzenle</h5>
        </div>
        <div class="card-body">
            <form method="post" action="@Url.Action("UpdateDestination", "Destination")">
                @Html.HiddenFor(x => x.destination_id)

                <div class="row mb-4">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="title" class="form-label text-light">Tur Adı</label>
                            @Html.TextBoxFor(x => x.title,
                                new {
                                        @class = "form-control",
                                        style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;",
                                        placeholder = "Tur adını giriniz"
                                    })
                        </div>
                    </div>

                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="image_url" class="form-label text-light">Resim URL</label>
                            @Html.TextBoxFor(x => x.image_url,
                                new {
                                        @class = "form-control",
                                        style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;",
                                        placeholder = "Resim URL'sini giriniz"
                                    })
                        </div>
                    </div>
                </div>

                <div class="row mb-4">


                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="days_trip" class="form-label text-light">Seyahat Süresi (Gün)</label>
                            <div class="input-group">
                                <span class="input-group-text" style="background-color: #131824; color: #ffffff; border-color: #1a1f2c;">
                                    <i class="bi bi-calendar-day"></i>
                                </span>
                                @Html.TextBoxFor(x => x.days_trip,
                                    new
                                        {
                                            @class = "form-control",
                                            style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;",
                                            type = "number",
                                            min = "1",
                                            max = "30",
                                            placeholder = "1"
                                        })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="price" class="form-label text-light">Tur Fiyatı</label>
                            <div class="input-group">
                                <span class="input-group-text" style="background-color: #131824; color: #ffffff; border-color: #1a1f2c;">₺</span>
                                @Html.TextBoxFor(x => x.price,
                                    new
                                        {
                                            @class = "form-control",
                                            style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;",
                                            type = "text",  // number yerine text kullanalım
                                            placeholder = "0.00"
                                        })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="total_tickets" class="form-label text-light">Toplam Bilet Sayısı</label>
                            <div class="input-group">
                                <span class="input-group-text" style="background-color: #131824; color: #ffffff; border-color: #1a1f2c;">
                                    <i class="bi bi-ticket-perforated"></i>
                                </span>
                                @Html.TextBoxFor(x => x.total_tickets,
                                    new
                                        {
                                            @class = "form-control",
                                            style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;",
                                            type = "number",
                                            min = "1",
                                            placeholder = "0"
                                        })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="category_id" class="form-label text-light">Kategori</label>
                            <div class="input-group">
                                <span class="input-group-text" style="background-color: #131824; color: #ffffff; border-color: #1a1f2c;">
                                    <i class="bi bi-tag"></i>
                                </span>
                                @if (ViewBag.Categories != null)
                                {
                                    @Html.DropDownListFor(x => x.category_id,
                                        ViewBag.Categories as SelectList,
                                        "-- Kategori Seçin --",
                                        new { @class = "form-select", style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(x => x.category_id, new { @class = "form-control", style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;", type = "number", min = "1", placeholder = "Kategori ID" })
                                }
                            </div>
                        </div>
                    </div>
                </div>


                <div class="form-group mb-4">
                    <label for="description" class="form-label text-light">Tur Açıklaması</label>
                    @Html.TextAreaFor(x => x.description, new { @class = "form-control", style = "background-color: #131824; color: #ffffff; border-color: #1a1f2c;", rows = "8", placeholder = "Tur açıklamasını giriniz" })
                </div>

                <div class="d-flex justify-content-between align-items-center">
                    <a class="btn btn-danger" onclick="confirmCancel()">
                        <i class="bi bi-x-circle me-2"></i>Vazgeç
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-check2-circle me-2"></i>Değişiklikleri Kaydet
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4" style="background-color: #0a0e17; border-color: #1a1f2c;">
                <div class="card-header text-light" style="background-color: #0d1321; border-color: #1a1f2c;">
                    <h6 class="m-0"><i class="bi bi-info-circle me-2 text-info"></i>Tur Önizleme</h6>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <img id="imagePreview" src="@Model.image_url" class="img-fluid rounded" style="max-height: 200px;"
                             onerror="this.src='https://via.placeholder.com/400x300?text=Resim+Yüklenemedi'; this.onerror='';" />
                    </div>
                    <h5 id="titlePreview" class="text-center text-light">@Model.title</h5>
                    
                    <div class="d-flex justify-content-center flex-wrap gap-2">
                        <div class="badge bg-primary p-2">
                            <i class="bi bi-cash me-1"></i>
                            <span id="pricePreview">@Model.price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("tr-TR"))</span>
                        </div>
                        <div class="badge bg-info p-2">
                            <span id="daysPreview">@Model.days_trip Gün</span>
                        </div>
                        <div class="badge bg-success p-2">
                            <span class="badge " id="categoryPreview">
                                @if (Model.category != null)
                                {
                                    @Model.category.CategoryName
                                }
                                else
                                {
                                    <text>Kategori Seçilmedi</text>
                                }
                            </span>
                        </div>
                    </div>
                    

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const imageUrl = document.getElementById('@Html.IdFor(x => x.image_url)');
        const title = document.getElementById('@Html.IdFor(x => x.title)');
        const price = document.getElementById('@Html.IdFor(x => x.price)');
        const totalTickets = document.getElementById('@Html.IdFor(x => x.total_tickets)');
        const soldTickets = document.getElementById('@Html.IdFor(x => x.sold_ticket)');
        const daysTrip = document.getElementById('@Html.IdFor(x => x.days_trip)');
        const categorySelect = document.getElementById('@Html.IdFor(x => x.category_id)');
        
        const imagePreview = document.getElementById('imagePreview');
        const titlePreview = document.getElementById('titlePreview');
        const pricePreview = document.getElementById('pricePreview');
        const ticketsPreview = document.getElementById('ticketsPreview');
        const daysPreview = document.getElementById('daysPreview');
        const categoryPreview = document.getElementById('categoryPreview');
        
        imageUrl.addEventListener('input', function() {
            imagePreview.src = this.value || 'https://via.placeholder.com/400x300?text=Resim+URL';
        });

        title.addEventListener('input', function() {
            titlePreview.innerText = this.value || 'Tur Adı';
        });
        
        price.addEventListener('input', function() {
            const formattedPrice = parseFloat(this.value) 
                ? new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(this.value)
                : '₺0.00';
            pricePreview.innerText = formattedPrice;
        });
        
        function updateTicketsAndOccupancy() {
            const total = parseInt(totalTickets.value) || 0;
            const sold = parseInt(soldTickets.value) || 0;
            
            ticketsPreview.innerText = `${sold} / ${total}`;
            
            let percent = 0;
            if (total > 0) {
                percent = Math.round((sold / total) * 100);
            }
            
            const progressBar = document.querySelector('.progress-bar');
            
            if (sold === 0) {
                progressBar.className = 'progress-bar bg-danger progress-bar-striped progress-bar-animated';
                progressBar.style.width = '100%';
                progressBar.setAttribute('aria-valuenow', 100);
                progressBar.innerHTML = `<strong>${sold}/${total}</strong>`;
            } else {
                progressBar.style.width = percent + '%';
                progressBar.setAttribute('aria-valuenow', percent);
                
                if (percent < 30) {
                    progressBar.className = 'progress-bar bg-danger progress-bar-striped progress-bar-animated';
                } else if (percent < 70) {
                    progressBar.className = 'progress-bar bg-warning progress-bar-striped progress-bar-animated';
                } else {
                    progressBar.className = 'progress-bar bg-success progress-bar-striped progress-bar-animated';
                }
                
                progressBar.innerHTML = `<strong>${sold}/${total}</strong>`;
            }
            
            if (sold > total && total > 0) {
                soldTickets.setCustomValidity("Satılan bilet sayısı toplam bilet sayısından fazla olamaz");
                soldTickets.reportValidity();
            } else {
                soldTickets.setCustomValidity("");
            }
        }
        
        totalTickets.addEventListener('input', updateTicketsAndOccupancy);
        soldTickets.addEventListener('input', updateTicketsAndOccupancy);
        
        daysTrip.addEventListener('input', function() {
            daysPreview.innerText = `${this.value || 0} Gün`;
        });
        
        if (categorySelect) {
            categorySelect.addEventListener('change', function() {
                if (this.selectedIndex > 0) {
                    const selectedText = this.options[this.selectedIndex].text;
                    categoryPreview.innerText = selectedText;
                    categoryPreview.className = 'badge bg-primary';
                } else {
                    categoryPreview.innerText = 'Kategori Seçilmedi';
                    categoryPreview.className = 'badge bg-secondary';
                }
            });
        }
    });
    
    function confirmCancel() {
        Swal.fire({
            background: '#000',
            color: '#fff',
            title: "Kaydetmeden çıkmak istediğinize emin misiniz?",
            text: "Yaptığınız değişiklikler kaydedilmeyecektir!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Kaydetmeden çık!",
            cancelButtonText: "Düzenlemeye devam et!"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/Destination/Index";
            }
        });
    }
</script>